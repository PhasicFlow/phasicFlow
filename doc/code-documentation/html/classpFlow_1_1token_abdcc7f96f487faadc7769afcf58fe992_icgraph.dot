digraph "good"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node1 [label="good",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="True if token is not UNDEFINED or ERROR."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="pFlow::badInput",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$namespacepFlow.html#a1da2c77e895df3330a9b2a421486be06",tooltip=" "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="pFlow::iEntry\< Key,\l T * \>::createEntry",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classpFlow_1_1iEntry.html#a133f34e170bc1f28e7439fe87043ce2f",tooltip="create an entry (dataEntry or dictionary) from stream"];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="pFlow::iIstream::findKeyword\lAndVal",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classpFlow_1_1iIstream.html#afb1243cec5833e96e8446abed4e3656c",tooltip="find a pair of keyword and data terminated by ; keyword data; return false if keyword does not exist ..."];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="pFlow::iIstream::nextData",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classpFlow_1_1iIstream.html#a2240995351ba90efed8943099847069e",tooltip="read the data next to keword keyword data; check the keyword is correct or not"];
  Node1 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="pFlow::operator\>\>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacepFlow.html#ac08e23027fc74d4f881e8ad3e4d9db21",tooltip=" "];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="pFlow::Logical::read",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classpFlow_1_1Logical.html#aff8e92ab47032ae811d1271161cb9b22",tooltip=" "];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="pFlow::dataEntry::readData\lEntry",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classpFlow_1_1dataEntry.html#a12a2f078710c7419e84afd6cdd58ac70",tooltip="read dataEntry from stream"];
  Node1 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="pFlow::iEntry\< Key,\l T * \>::readKeyword",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classpFlow_1_1iEntry.html#adaf3255a26893f538d0e891e77d0d6c7",tooltip="read a keyword from stream"];
  Node1 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="pFlow::oTstream::write",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classpFlow_1_1oTstream.html#aa3b476f06fa0df546adf5f376083ec2b",tooltip="Write token to stream or otherwise handle it."];
}
